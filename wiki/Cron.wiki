#labels Phase-QA
====================================
=Cron (developmental)=
====================================

Cache is a task scheduling engine for Google Appengine applications.
You can schedule tasks using standard Unix cron syntax, with non-absolute
urls used for the command string. For example
{{{
*/5 * * * * /run/every/5/min/
}}}

Every 5 minutes this would call http://myapp.appspot.com/run/every/5/min/
dependent on the amount of requests your site is getting. Cron does run
on requests where you initialize it. 

On a request where cron is initialized it will check to see if any
tasks should have run yet. If so, it will run each task until 1 second
has passed. Meaning, if you have a cron task that takes 3 seconds to
run, only that task will run on that request, and the rest will run
on another request.

For low traffic sites, this may mean cron tasks will not run as often
as scheduled. If you only get 1 request every 20 minutes, and you have
a task scheduled for every 5 minutes, it will only run every 20 minutes.

Configuring the Cron Interface
=================

Cron tasks are scheduled using the cron interface. The interface is
it's own app handler that comes with gaeutilities. In order to use it
you set up your app.yaml with the following settings.

{{{
- url: /gaeutilities/css
  static_dir: appengine_utilities/interface/css

- url: /gaeutilities/.*
  script: appengine_utilities/interface/main.py
  login: admin

}}}

After this, you can access the interface by going to http://myapp.appspot.com/gaeutilities/

Using Cron With The Development Appserver
=================

The dev_appserver is unable to make urlfetch calls to itself. In order to test
cron using the dev_appserver, you need to run a second instance. By default cron
will check to see if the application is running on port 8080, and if so will
make requests to 8081. This is configurable in cron.py

Using Cron
=================

Cron works on page requests. For the best results, you should have cron
initialized in as many pages as possible. Though, you may want to avoid 
using it on pages that have longer load times.

To use cron on a page request, simple import the module and initialize
and instance of it.

{{{
from appengine_utilities import cron

c = cron.Cron()
# rest of your code here
}}}